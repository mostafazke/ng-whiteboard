{
  "name": "ng-whiteboard",
  "version": "0.0.0-semantically-released",
  "license": "MIT",
  "scripts": {
    "ng": "nx",
    "start": "nx serve demo",
    "copy:readme": "copyfiles ./README.md ./projects/ng-whiteboard",
    "build": "npm run build:lib && npm run build:demo",
    "build:lib": "yarn copy:readme && nx build ng-whiteboard --prod",
    "build:demo": "nx build demo --prod --base-href='https://mostafazke.github.io/ng-whiteboard/'",
    "format:check": "nx format:check",
    "format:write": "nx format:write",
    "test": "yarn test:lib && yarn test:demo",
    "test:lib": "nx test ng-whiteboard",
    "test:lib-coverage": "nx test ng-whiteboard --codeCoverage --watch=false",
    "report-coverage:lib": "cat ./coverage/ng-whiteboard/lcov.info | codecov",
    "publish:demo": "npx angular-cli-ghpages --dir=./dist/demo",
    "publish:lib": "npx semantic-release",
    "adjust-version": "npm-run-all adjust-version:*",
    "adjust-version:lib": "rjp projects/ng-whiteboard/package.json version $VERSION",
    "adjust-version:main": "rjp package.json version $VERSION",
    "semantic-release": "semantic-release",
    "postinstall": "node ./decorate-angular-cli.js && ngcc --properties es2015 browser module main --first-only --create-ivy-entry-points",
    "cm": "cz",
    "prepare": "husky install"
  },
  "private": "false",
  "dependencies": {
    "@angular/animations": "~14.0.0",
    "@angular/common": "~14.0.0",
    "@angular/compiler": "~14.0.0",
    "@angular/core": "~14.0.0",
    "@angular/forms": "~14.0.0",
    "@angular/platform-browser": "~14.0.0",
    "@angular/platform-browser-dynamic": "~14.0.0",
    "@angular/router": "~14.0.0",
    "@angular/service-worker": "~14.0.0",
    "@nrwl/angular": "14.4.0",
    "d3": "^7.0.0",
    "firebase": "^9.9.2",
    "highlight.js": "^11.6.0",
    "ngx-colors": "^3.1.2",
    "ngx-toastr": "^15.0.0",
    "rxjs": "~7.5.5",
    "tslib": "^2.0.0",
    "zone.js": "~0.11.4"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "~14.0.0",
    "@angular-eslint/eslint-plugin": "~13.2.1",
    "@angular-eslint/eslint-plugin-template": "~13.2.1",
    "@angular-eslint/template-parser": "~13.2.1",
    "@angular/cli": "~14.0.0",
    "@angular/compiler-cli": "~14.0.0",
    "@angular/language-service": "~14.0.0",
    "@angular/pwa": "^14.1.0",
    "@commitlint/cli": "^17.0.3",
    "@commitlint/config-conventional": "^17.0.3",
    "@nrwl/cli": "14.3.6",
    "@nrwl/cypress": "14.3.6",
    "@nrwl/eslint-plugin-nx": "14.3.6",
    "@nrwl/jest": "14.3.6",
    "@nrwl/linter": "14.3.6",
    "@nrwl/nx-cloud": "latest",
    "@nrwl/workspace": "14.3.6",
    "@semantic-release/changelog": "^6.0.1",
    "@semantic-release/commit-analyzer": "^9.0.2",
    "@semantic-release/exec": "^6.0.3",
    "@semantic-release/git": "^10.0.1",
    "@semantic-release/github": "^8.0.5",
    "@semantic-release/npm": "^9.0.1",
    "@semantic-release/release-notes-generator": "^10.0.3",
    "@types/d3": "^5.16.0",
    "@types/jest": "27.4.1",
    "@types/node": "16.11.7",
    "@typescript-eslint/eslint-plugin": "~5.24.0",
    "@typescript-eslint/parser": "~5.24.0",
    "codecov": "^3.8.3",
    "copyfiles": "^2.4.1",
    "cypress": "^9.1.0",
    "eslint": "~8.15.0",
    "eslint-config-prettier": "8.1.0",
    "eslint-plugin-cypress": "^2.10.3",
    "git-cz": "4.9.0",
    "husky": "^8.0.0",
    "jest": "27.5.1",
    "jest-preset-angular": "~11.1.2",
    "lint-staged": "^13.0.3",
    "ng-packagr": "~14.0.0",
    "npm-run-all": "^4.1.5",
    "nx": "14.3.6",
    "prettier": "^2.6.2",
    "postcss": "^8.4.5",
    "postcss-import": "~14.1.0",
    "postcss-preset-env": "~7.5.0",
    "postcss-url": "~10.1.3",
    "replace-json-property": "^1.8.0",
    "semantic-release": "^19.0.3",
    "ts-jest": "27.1.4",
    "ts-node": "~10.8.0",
    "typescript": "~4.7.2"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mostafazke/ng-whiteboard.git"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/git-cz"
    }
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "lint-staged": {
    "projects/**/*.ts": [
      "yarn format:write",
      "yarn copy:readme"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  }
}
