{
  "name": "ng-whiteboard",
  "version": "3.1.6",
  "license": "MIT",
  "scripts": {
    "ng": "nx",
    "start": "nx serve demo",
    "copy:readme": "copyfiles ./README.md ./projects/ng-whiteboard",
    "build": "npm run build:lib && npm run build:demo",
    "build:lib": "yarn copy:readme && nx build ng-whiteboard --prod",
    "build:demo": "nx build demo --prod --base-href='https://mostafazke.github.io/ng-whiteboard/'",
    "format:check": "nx format:check",
    "format:write": "nx format:write",
    "test": "yarn test:lib && yarn test:demo",
    "test:ci": "nx test ng-whiteboard  --configuration=ci",
    "test:lib": "nx test ng-whiteboard --codeCoverage --watchAll",
    "test:demo": "nx test demo --codeCoverage --watchAll",
    "report-coverage:lib": "cat ./coverage/ng-whiteboard/lcov.info | codecov",
    "publish:demo": "npx angular-cli-ghpages --dir=./dist/demo",
    "publish:lib": "npx semantic-release",
    "adjust-version": "concurrently \"yarn:adjust-version:*\"",
    "adjust-version:lib": "rjp projects/ng-whiteboard/package.json version $VERSION",
    "adjust-version:main": "rjp package.json version $VERSION",
    "semantic-release": "semantic-release",
    "cm": "npx git-cz",
    "prepare": "husky install"
  },
  "dependencies": {
    "@angular/animations": "~16.2.4",
    "@angular/common": "~16.2.4",
    "@angular/compiler": "~16.2.4",
    "@angular/core": "~16.2.4",
    "@angular/forms": "~16.2.4",
    "@angular/platform-browser": "~16.2.4",
    "@angular/platform-browser-dynamic": "~16.2.4",
    "@angular/router": "~16.2.4",
    "@angular/service-worker": "^16.2.4",
    "@nx/angular": "20.2.0",
    "firebase": "^11.0.0",
    "highlight.js": "^11.8.0",
    "ngx-colors": "^3.6.0",
    "perfect-freehand": "^1.2.2",
    "rxjs": "~7.8.0",
    "tslib": "^2.8.0",
    "zone.js": "~0.15.0"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "~19.1.6",
    "@angular-devkit/core": "~16.2.4",
    "@angular-devkit/schematics": "~16.2.4",
    "@angular-eslint/eslint-plugin": "~16.0.0",
    "@angular-eslint/eslint-plugin-template": "~16.0.0",
    "@angular-eslint/template-parser": "~16.0.0",
    "@angular/cli": "~16.2.4",
    "@angular/compiler-cli": "~16.2.4",
    "@angular/language-service": "~16.2.4",
    "@angular/pwa": "^16.0.4",
    "@commitlint/cli": "^17.6.5",
    "@commitlint/config-conventional": "^17.6.5",
    "@hirez_io/observer-spy": "^2.2.0",
    "@nx/cypress": "16.9.1",
    "@nx/eslint-plugin": "16.9.1",
    "@nx/jest": "16.9.1",
    "@nx/js": "16.9.1",
    "@nx/linter": "16.9.1",
    "@nx/web": "16.9.1",
    "@nx/workspace": "16.9.1",
    "@schematics/angular": "~16.2.4",
    "@semantic-release/changelog": "^6.0.3",
    "@semantic-release/commit-analyzer": "^10.0.0",
    "@semantic-release/exec": "^6.0.3",
    "@semantic-release/git": "^10.0.1",
    "@semantic-release/github": "^9.0.0",
    "@semantic-release/npm": "^10.0.3",
    "@semantic-release/release-notes-generator": "^11.0.2",
    "@types/jest": "^29.4.0",
    "@types/node": "16.11.7",
    "@typescript-eslint/eslint-plugin": "^5.60.1",
    "@typescript-eslint/parser": "^5.60.1",
    "codecov": "^3.8.3",
    "concurrently": "^8.1.0",
    "copyfiles": "^2.4.1",
    "cypress": "^13.0.0",
    "eslint": "~8.46.0",
    "eslint-config-prettier": "8.1.0",
    "eslint-plugin-cypress": "^2.13.4",
    "git-cz": "^4.9.0",
    "husky": "^8.0.3",
    "jest": "^29.4.1",
    "jest-canvas-mock": "^2.5.1",
    "jest-environment-jsdom": "^29.4.1",
    "jest-preset-angular": "~13.1.0",
    "jsonc-eslint-parser": "^2.1.0",
    "lint-staged": "^13.2.2",
    "ng-packagr": "~16.2.3",
    "nx": "16.9.1",
    "postcss": "^8.4.5",
    "postcss-import": "~14.1.0",
    "postcss-preset-env": "~7.5.0",
    "postcss-url": "~10.1.3",
    "prettier": "^2.6.2",
    "replace-json-property": "^1.9.0",
    "semantic-release": "^21.0.3",
    "ts-jest": "^29.1.0",
    "ts-node": "10.9.1",
    "typescript": "~5.1.3"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mostafazke/ng-whiteboard.git"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/git-cz"
    }
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "lint-staged": {
    "projects/**/*.ts": [
      "yarn format:check",
      "yarn format:write",
      "yarn copy:readme"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  }
}
