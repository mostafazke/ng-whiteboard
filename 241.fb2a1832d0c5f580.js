"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[241],{4241:(k,F,d)=>{d.r(F),d.d(F,{DocumentationModule:()=>j});var r=d(177),n=d(2916),t=d(4438),a=d(4322);const i=[{path:"",component:(()=>{class e{static{this.\u0275fac=function(s){return new(s||e)}}static{this.\u0275cmp=t.VBU({type:e,selectors:[["app-documentation"]],decls:646,vars:0,consts:[["tagline","Documentation"],[1,"main-content"],[1,"highlight"],["href","/projects/ng-whiteboard/src/lib/core/types/elements.ts"],["href","/projects/ng-whiteboard/src/lib/core/types/options.ts"],["href","/projects/ng-whiteboard/src/lib/core/types/tools.ts"],["href",""],["href","/projects/ng-whiteboard/src/lib/ng-whiteboard.service.ts"]],template:function(s,l){1&s&&(t.nrm(0,"app-header",0),t.j41(1,"section",1)(2,"h2"),t.EFF(3,"\u{1f4d8} Documentation"),t.k0s(),t.j41(4,"h3"),t.EFF(5,"\u{1f4cc} Component Inputs"),t.k0s(),t.j41(6,"table")(7,"tr")(8,"th"),t.EFF(9,"\u2699\ufe0f Input"),t.k0s(),t.j41(10,"th"),t.EFF(11,"\u{1f520} Type"),t.k0s(),t.j41(12,"th"),t.EFF(13,"\u2139\ufe0f Description"),t.k0s(),t.j41(14,"th"),t.EFF(15,"\u{1f527} Default"),t.k0s()(),t.j41(16,"tr")(17,"td"),t.EFF(18,"[data]"),t.k0s(),t.j41(19,"td")(20,"code",2)(21,"a",3),t.EFF(22,"WhiteboardElement[]"),t.k0s()()(),t.j41(23,"td"),t.EFF(24,"Whiteboard data"),t.k0s(),t.j41(25,"td")(26,"code",2),t.EFF(27,"[]"),t.k0s()()(),t.j41(28,"tr")(29,"td"),t.EFF(30,"[options]"),t.k0s(),t.j41(31,"td")(32,"code",2)(33,"a",4),t.EFF(34,"WhiteboardOptions"),t.k0s()()(),t.j41(35,"td"),t.EFF(36,"component configuration object, properties described below"),t.k0s(),t.j41(37,"td")(38,"code",2),t.EFF(39,"null"),t.k0s()()(),t.j41(40,"tr")(41,"td"),t.EFF(42,"[drawingEnabled]"),t.k0s(),t.j41(43,"td")(44,"code",2),t.EFF(45,"boolean"),t.k0s()(),t.j41(46,"td"),t.EFF(47,"Enable mouse/touch interactions"),t.k0s(),t.j41(48,"td")(49,"code",2),t.EFF(50,"true"),t.k0s()()(),t.j41(51,"tr")(52,"td"),t.EFF(53,"[selectedTool]"),t.k0s(),t.j41(54,"td")(55,"code",2)(56,"a",5),t.EFF(57,"ToolType"),t.k0s()()(),t.j41(58,"td"),t.EFF(59,"The current selected tool"),t.k0s(),t.j41(60,"td")(61,"code",2),t.EFF(62,"ToolType.Pen"),t.k0s()()(),t.j41(63,"tr")(64,"td"),t.EFF(65,"[canvasWidth]"),t.k0s(),t.j41(66,"td")(67,"code",2),t.EFF(68,"number"),t.k0s()(),t.j41(69,"td"),t.EFF(70,"The width of whiteboard canvas"),t.k0s(),t.j41(71,"td")(72,"code",2),t.EFF(73,"800"),t.k0s()()(),t.j41(74,"tr")(75,"td"),t.EFF(76,"[canvasHeight]"),t.k0s(),t.j41(77,"td")(78,"code",2),t.EFF(79,"number"),t.k0s()(),t.j41(80,"td"),t.EFF(81,"The height of whiteboard canvas"),t.k0s(),t.j41(82,"td")(83,"code",2),t.EFF(84,"600"),t.k0s()()(),t.j41(85,"tr")(86,"td"),t.EFF(87,"[fullScreen]"),t.k0s(),t.j41(88,"td")(89,"code",2),t.EFF(90,"boolean"),t.k0s()(),t.j41(91,"td"),t.EFF(92,"if true change (canvasWidth, canvasHeight) to fit the parent container"),t.k0s(),t.j41(93,"td")(94,"code",2),t.EFF(95,"true"),t.k0s()()(),t.j41(96,"tr")(97,"td"),t.EFF(98,"[strokeColor]"),t.k0s(),t.j41(99,"td")(100,"code",2),t.EFF(101,"string"),t.k0s()(),t.j41(102,"td"),t.EFF(103,"The default stroke color"),t.k0s(),t.j41(104,"td")(105,"code",2),t.EFF(106,"#333333"),t.k0s()()(),t.j41(107,"tr")(108,"td"),t.EFF(109,"[fill]"),t.k0s(),t.j41(110,"td")(111,"code",2),t.EFF(112,"number"),t.k0s()(),t.j41(113,"td"),t.EFF(114,"The default fill color"),t.k0s(),t.j41(115,"td")(116,"code",2),t.EFF(117,"transparent"),t.k0s()()(),t.j41(118,"tr")(119,"td"),t.EFF(120,"[backgroundColor]"),t.k0s(),t.j41(121,"td")(122,"code",2),t.EFF(123,"string"),t.k0s()(),t.j41(124,"td"),t.EFF(125,"The default background color"),t.k0s(),t.j41(126,"td")(127,"code",2),t.EFF(128,"#F8F9FA"),t.k0s()()(),t.j41(129,"tr")(130,"td"),t.EFF(131,"[strokeWidth]"),t.k0s(),t.j41(132,"td")(133,"code",2),t.EFF(134,"number"),t.k0s()(),t.j41(135,"td"),t.EFF(136,"The default stroke width"),t.k0s(),t.j41(137,"td")(138,"code",2),t.EFF(139,"2"),t.k0s()()(),t.j41(140,"tr")(141,"td"),t.EFF(142,"[zoom]"),t.k0s(),t.j41(143,"td")(144,"code",2),t.EFF(145,"number"),t.k0s()(),t.j41(146,"td"),t.EFF(147,"Zoom level"),t.k0s(),t.j41(148,"td")(149,"code",2),t.EFF(150,"1"),t.k0s()()(),t.j41(151,"tr")(152,"td"),t.EFF(153,"[fontFamily]"),t.k0s(),t.j41(154,"td")(155,"code",2),t.EFF(156,"string"),t.k0s()(),t.j41(157,"td"),t.EFF(158,"The default font family"),t.k0s(),t.j41(159,"td")(160,"code",2),t.EFF(161,"sans-serif"),t.k0s()()(),t.j41(162,"tr")(163,"td"),t.EFF(164,"[fontSize]"),t.k0s(),t.j41(165,"td")(166,"code",2),t.EFF(167,"number"),t.k0s()(),t.j41(168,"td"),t.EFF(169,"The default font size"),t.k0s(),t.j41(170,"td")(171,"code",2),t.EFF(172,"24"),t.k0s()()(),t.nrm(173,"tr"),t.j41(174,"tr")(175,"td"),t.EFF(176,"[center]"),t.k0s(),t.j41(177,"td")(178,"code",2),t.EFF(179,"boolean"),t.k0s()(),t.j41(180,"td"),t.EFF(181,"Center the canvas in parent component, works with fullScreen: false"),t.k0s(),t.j41(182,"td")(183,"code",2),t.EFF(184,"true"),t.k0s()()(),t.j41(185,"tr")(186,"td"),t.EFF(187,"[x]"),t.k0s(),t.j41(188,"td")(189,"code",2),t.EFF(190,"number"),t.k0s()(),t.j41(191,"td"),t.EFF(192,"if center is false, set the X axis"),t.k0s(),t.j41(193,"td")(194,"code",2),t.EFF(195,"0"),t.k0s()()(),t.j41(196,"tr")(197,"td"),t.EFF(198,"[y]"),t.k0s(),t.j41(199,"td")(200,"code",2),t.EFF(201,"number"),t.k0s()(),t.j41(202,"td"),t.EFF(203,"if center is false, set the Y axis"),t.k0s(),t.j41(204,"td")(205,"code",2),t.EFF(206,"0"),t.k0s()()(),t.j41(207,"tr")(208,"td"),t.EFF(209,"[enableGrid]"),t.k0s(),t.j41(210,"td")(211,"code",2),t.EFF(212,"boolean"),t.k0s()(),t.j41(213,"td"),t.EFF(214,"Enable the grid pattern"),t.k0s(),t.j41(215,"td")(216,"code",2),t.EFF(217,"false"),t.k0s()()(),t.j41(218,"tr")(219,"td"),t.EFF(220,"[gridSize]"),t.k0s(),t.j41(221,"td")(222,"code",2),t.EFF(223,"number"),t.k0s()(),t.j41(224,"td"),t.EFF(225,"Set the grid inner boxes size"),t.k0s(),t.j41(226,"td")(227,"code",2),t.EFF(228,"10"),t.k0s()()(),t.j41(229,"tr")(230,"td"),t.EFF(231,"[snapToGrid]"),t.k0s(),t.j41(232,"td")(233,"code",2),t.EFF(234,"boolean"),t.k0s()(),t.j41(235,"td"),t.EFF(236,"Enable snaping to grid"),t.k0s(),t.j41(237,"td")(238,"code",2),t.EFF(239,"false"),t.k0s()()(),t.j41(240,"tr")(241,"td"),t.EFF(242,"[lineJoin]"),t.k0s(),t.j41(243,"td")(244,"code",2)(245,"a",6),t.EFF(246,"LineJoin"),t.k0s()()(),t.j41(247,"td"),t.EFF(248,"The default Line join"),t.k0s(),t.j41(249,"td")(250,"code",2),t.EFF(251,"LineJoin.Miter"),t.k0s()()(),t.j41(252,"tr")(253,"td"),t.EFF(254,"[lineCap]"),t.k0s(),t.j41(255,"td")(256,"code",2)(257,"a",6),t.EFF(258,"LineCap"),t.k0s()()(),t.j41(259,"td"),t.EFF(260,"The default Line cap"),t.k0s(),t.j41(261,"td")(262,"code",2),t.EFF(263,"LineCap.Butt"),t.k0s()()(),t.j41(264,"tr")(265,"td"),t.EFF(266,"[dasharray]"),t.k0s(),t.j41(267,"td")(268,"code",2),t.EFF(269,"string"),t.k0s()(),t.j41(270,"td"),t.EFF(271,"The default dash-array"),t.k0s(),t.j41(272,"td")(273,"code",2),t.EFF(274,"''"),t.k0s()()(),t.j41(275,"tr")(276,"td"),t.EFF(277,"[dashoffset]"),t.k0s(),t.j41(278,"td")(279,"code",2),t.EFF(280,"number"),t.k0s()(),t.j41(281,"td"),t.EFF(282,"The default dash-offset"),t.k0s(),t.j41(283,"td")(284,"code",2),t.EFF(285,"0"),t.k0s()()()(),t.j41(286,"h3"),t.EFF(287,"\u{1f4e2} Component Outputs/Events"),t.k0s(),t.j41(288,"table")(289,"thead")(290,"tr")(291,"th"),t.EFF(292,"\u{1f3af} Event"),t.k0s(),t.j41(293,"th"),t.EFF(294,"\u{1f4dd} Description"),t.k0s(),t.j41(295,"th"),t.EFF(296,"\u{1f6e0} Arguments"),t.k0s()()(),t.j41(297,"tbody")(298,"tr")(299,"td")(300,"strong")(301,"code"),t.EFF(302,"ready"),t.k0s()()(),t.j41(303,"td"),t.EFF(304,"Emitted when the whiteboard is fully initialized and ready for use."),t.k0s(),t.j41(305,"td")(306,"code",2),t.EFF(307,"none"),t.k0s()()(),t.j41(308,"tr")(309,"td")(310,"strong")(311,"code"),t.EFF(312,"destroyed"),t.k0s()()(),t.j41(313,"td"),t.EFF(314,"Emitted when the whiteboard is destroyed, allowing for cleanup."),t.k0s(),t.j41(315,"td")(316,"code",2),t.EFF(317,"none"),t.k0s()()(),t.j41(318,"tr")(319,"td")(320,"strong")(321,"code"),t.EFF(322,"drawStart"),t.k0s()()(),t.j41(323,"td"),t.EFF(324,"Triggered when a user starts drawing on the whiteboard."),t.k0s(),t.j41(325,"td")(326,"code",2),t.EFF(327,"none"),t.k0s()()(),t.j41(328,"tr")(329,"td")(330,"strong")(331,"code"),t.EFF(332,"drawing"),t.k0s()()(),t.j41(333,"td"),t.EFF(334,"Emitted continuously while the user is drawing."),t.k0s(),t.j41(335,"td")(336,"code",2),t.EFF(337,"none"),t.k0s()()(),t.j41(338,"tr")(339,"td")(340,"strong")(341,"code"),t.EFF(342,"drawEnd"),t.k0s()()(),t.j41(343,"td"),t.EFF(344,"Triggered when the user stops drawing."),t.k0s(),t.j41(345,"td")(346,"code",2),t.EFF(347,"none"),t.k0s()()(),t.j41(348,"tr")(349,"td")(350,"strong")(351,"code"),t.EFF(352,"undo"),t.k0s()()(),t.j41(353,"td"),t.EFF(354,"Emitted when an undo action is performed."),t.k0s(),t.j41(355,"td")(356,"code",2),t.EFF(357,"none"),t.k0s()()(),t.j41(358,"tr")(359,"td")(360,"strong")(361,"code"),t.EFF(362,"redo"),t.k0s()()(),t.j41(363,"td"),t.EFF(364,"Emitted when a redo action is performed."),t.k0s(),t.j41(365,"td")(366,"code",2),t.EFF(367,"none"),t.k0s()()(),t.j41(368,"tr")(369,"td")(370,"strong")(371,"code"),t.EFF(372,"clear"),t.k0s()()(),t.j41(373,"td"),t.EFF(374,"Triggered when the whiteboard is cleared."),t.k0s(),t.j41(375,"td")(376,"code",2),t.EFF(377,"none"),t.k0s()()(),t.j41(378,"tr")(379,"td")(380,"strong")(381,"code"),t.EFF(382,"dataChange"),t.k0s()()(),t.j41(383,"td"),t.EFF(384,"Emitted when the whiteboard's internal data state changes."),t.k0s(),t.j41(385,"td")(386,"code",2),t.EFF(387,"data"),t.k0s()()(),t.j41(388,"tr")(389,"td")(390,"strong")(391,"code"),t.EFF(392,"save"),t.k0s()()(),t.j41(393,"td"),t.EFF(394,"Triggered when the whiteboard state is saved."),t.k0s(),t.j41(395,"td")(396,"code",2),t.EFF(397,"base64 image"),t.k0s()()(),t.j41(398,"tr")(399,"td")(400,"strong")(401,"code"),t.EFF(402,"elementAdded"),t.k0s()()(),t.j41(403,"td"),t.EFF(404,"Emitted when a new element is added to the whiteboard."),t.k0s(),t.j41(405,"td")(406,"code",2),t.EFF(407,"WhiteboardElement"),t.k0s()()(),t.j41(408,"tr")(409,"td")(410,"strong")(411,"code"),t.EFF(412,"elementUpdated"),t.k0s()()(),t.j41(413,"td"),t.EFF(414,"Triggered when an existing element is modified."),t.k0s(),t.j41(415,"td")(416,"code",2),t.EFF(417,"WhiteboardElement"),t.k0s()()(),t.j41(418,"tr")(419,"td")(420,"strong")(421,"code"),t.EFF(422,"elementSelected"),t.k0s()()(),t.j41(423,"td"),t.EFF(424,"Emitted when an element is selected."),t.k0s(),t.j41(425,"td")(426,"code",2),t.EFF(427,"WhiteboardElement | null"),t.k0s()()(),t.j41(428,"tr")(429,"td")(430,"strong")(431,"code"),t.EFF(432,"elementDeleted"),t.k0s()()(),t.j41(433,"td"),t.EFF(434,"Triggered when an element is removed."),t.k0s(),t.j41(435,"td")(436,"code",2),t.EFF(437,"WhiteboardElement"),t.k0s()()(),t.j41(438,"tr")(439,"td")(440,"strong")(441,"code"),t.EFF(442,"imageAdded"),t.k0s()()(),t.j41(443,"td"),t.EFF(444,"Emitted when an image is added to the whiteboard."),t.k0s(),t.j41(445,"td")(446,"code",2),t.EFF(447,"none"),t.k0s()()(),t.j41(448,"tr")(449,"td")(450,"strong")(451,"code"),t.EFF(452,"selectedToolChange"),t.k0s()()(),t.j41(453,"td"),t.EFF(454,"Triggered when the active drawing tool is changed."),t.k0s(),t.j41(455,"td")(456,"code",2),t.EFF(457,"ToolsEnum"),t.k0s()()(),t.j41(458,"tr")(459,"td")(460,"strong")(461,"code"),t.EFF(462,"configChanged"),t.k0s()()(),t.j41(463,"td"),t.EFF(464,"Emitted when the whiteboard configuration settings are updated."),t.k0s(),t.j41(465,"td")(466,"code",2),t.EFF(467,"ConfigObject"),t.k0s()()()()(),t.j41(468,"h3"),t.EFF(469,"\u{1f6e0} Service Methods"),t.k0s(),t.j41(470,"p"),t.EFF(471," The "),t.j41(472,"code",2)(473,"a",7),t.EFF(474,"WhiteboardService"),t.k0s()(),t.EFF(475," provides methods to manage elements, control the canvas, and interact with the whiteboard. "),t.k0s(),t.j41(476,"table")(477,"thead")(478,"tr")(479,"th"),t.EFF(480,"\u{1f3af} Method"),t.k0s(),t.j41(481,"th"),t.EFF(482,"\u{1f4dd} Description"),t.k0s(),t.j41(483,"th"),t.EFF(484,"\u{1f6e0} Parameters"),t.k0s()()(),t.j41(485,"tbody")(486,"tr")(487,"td")(488,"strong")(489,"code"),t.EFF(490,"addElement(element: WhiteboardElement)"),t.k0s()()(),t.j41(491,"td"),t.EFF(492,"Adds a new element (e.g., shape, text) to the whiteboard."),t.k0s(),t.j41(493,"td")(494,"code",2),t.EFF(495,"element: WhiteboardElement"),t.k0s()()(),t.j41(496,"tr")(497,"td")(498,"strong")(499,"code"),t.EFF(500,"addImage(image: string, x?: number, y?: number)"),t.k0s()()(),t.j41(501,"td"),t.EFF(502,"Adds an image to the whiteboard at a specified position."),t.k0s(),t.j41(503,"td")(504,"code",2),t.EFF(505,"image: string, x?: number, y?: number"),t.k0s()()(),t.j41(506,"tr")(507,"td")(508,"strong")(509,"code"),t.EFF(510,"removeElement(id: string)"),t.k0s()()(),t.j41(511,"td"),t.EFF(512,"Removes an element from the whiteboard by its ID."),t.k0s(),t.j41(513,"td")(514,"code",2),t.EFF(515,"id: string"),t.k0s()()(),t.j41(516,"tr")(517,"td")(518,"strong")(519,"code"),t.EFF(520,"updateElement(element: WhiteboardElement)"),t.k0s()()(),t.j41(521,"td"),t.EFF(522,"Updates an existing element with new properties."),t.k0s(),t.j41(523,"td")(524,"code",2),t.EFF(525,"element: WhiteboardElement"),t.k0s()()(),t.j41(526,"tr")(527,"td")(528,"strong")(529,"code"),t.EFF(530,"updateSelectedElement(partialElement: Partial<WhiteboardElement>)"),t.k0s()()(),t.j41(531,"td"),t.EFF(532,"Modifies only specific properties of the currently selected element."),t.k0s(),t.j41(533,"td")(534,"code",2),t.EFF(535,"partialElement: Partial<WhiteboardElement>"),t.k0s()()(),t.j41(536,"tr")(537,"td")(538,"strong")(539,"code"),t.EFF(540,"selectElement(element: WhiteboardElement | null)"),t.k0s()()(),t.j41(541,"td"),t.EFF(542,"Selects or deselects an element on the whiteboard."),t.k0s(),t.j41(543,"td")(544,"code",2),t.EFF(545,"element: WhiteboardElement | null"),t.k0s()()(),t.j41(546,"tr")(547,"td")(548,"strong")(549,"code"),t.EFF(550,"clear()"),t.k0s()()(),t.j41(551,"td"),t.EFF(552,"Clears all elements from the whiteboard."),t.k0s(),t.j41(553,"td")(554,"code",2),t.EFF(555,"none"),t.k0s()()(),t.j41(556,"tr")(557,"td")(558,"strong")(559,"code"),t.EFF(560,"undo()"),t.k0s()()(),t.j41(561,"td"),t.EFF(562,"Reverts the last action."),t.k0s(),t.j41(563,"td")(564,"code",2),t.EFF(565,"none"),t.k0s()()(),t.j41(566,"tr")(567,"td")(568,"strong")(569,"code"),t.EFF(570,"redo()"),t.k0s()()(),t.j41(571,"td"),t.EFF(572,"Restores the last undone action."),t.k0s(),t.j41(573,"td")(574,"code",2),t.EFF(575,"none"),t.k0s()()(),t.j41(576,"tr")(577,"td")(578,"strong")(579,"code"),t.EFF(580,"save(format = FormatType.Base64, name = 'New board')"),t.k0s()()(),t.j41(581,"td"),t.EFF(582,"Saves the current whiteboard state in the specified format (e.g., Base64, JSON, SVG)."),t.k0s(),t.j41(583,"td")(584,"code",2),t.EFF(585,"format: FormatType, name: string"),t.k0s()()(),t.j41(586,"tr")(587,"td")(588,"strong")(589,"code"),t.EFF(590,"setActiveTool(tool: ToolType)"),t.k0s()()(),t.j41(591,"td"),t.EFF(592,"Sets the current drawing tool (e.g., pen, eraser, shape)."),t.k0s(),t.j41(593,"td")(594,"code",2),t.EFF(595,"tool: ToolType"),t.k0s()()(),t.j41(596,"tr")(597,"td")(598,"strong")(599,"code"),t.EFF(600,"setCanvasDimensions(width: number, height: number)"),t.k0s()()(),t.j41(601,"td"),t.EFF(602,"Sets the width and height of the whiteboard canvas."),t.k0s(),t.j41(603,"td")(604,"code",2),t.EFF(605,"width: number, height: number"),t.k0s()()(),t.j41(606,"tr")(607,"td")(608,"strong")(609,"code"),t.EFF(610,"setCanvasPosition(x: number, y: number)"),t.k0s()()(),t.j41(611,"td"),t.EFF(612,"Moves the canvas to a specific position."),t.k0s(),t.j41(613,"td")(614,"code",2),t.EFF(615,"x: number, y: number"),t.k0s()()(),t.j41(616,"tr")(617,"td")(618,"strong")(619,"code"),t.EFF(620,"centerCanvas()"),t.k0s()()(),t.j41(621,"td"),t.EFF(622,"Centers the whiteboard canvas within the viewport."),t.k0s(),t.j41(623,"td")(624,"code",2),t.EFF(625,"none"),t.k0s()()(),t.j41(626,"tr")(627,"td")(628,"strong")(629,"code"),t.EFF(630,"fullScreen()"),t.k0s()()(),t.j41(631,"td"),t.EFF(632,"Toggles full-screen mode for the whiteboard."),t.k0s(),t.j41(633,"td")(634,"code",2),t.EFF(635,"none"),t.k0s()()(),t.j41(636,"tr")(637,"td")(638,"strong")(639,"code"),t.EFF(640,"toggleGrid()"),t.k0s()()(),t.j41(641,"td"),t.EFF(642,"Enables or disables the background grid for alignment."),t.k0s(),t.j41(643,"td")(644,"code",2),t.EFF(645,"none"),t.k0s()()()()()())},dependencies:[a.l]})}}return e})()}];let E=(()=>{class e{static{this.\u0275fac=function(s){return new(s||e)}}static{this.\u0275mod=t.$C({type:e})}static{this.\u0275inj=t.G2t({imports:[n.iI.forChild(i),n.iI]})}}return e})();var c=d(7130);let j=(()=>{class e{static{this.\u0275fac=function(s){return new(s||e)}}static{this.\u0275mod=t.$C({type:e})}static{this.\u0275inj=t.G2t({imports:[r.MD,E,c.G]})}}return e})()}}]);